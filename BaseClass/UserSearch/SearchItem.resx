<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.TrayLargeIcon" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABIAAAASCAYAAABWzo5XAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAA+hJREFUOE99lFtQ
        lGUYx59vDywoLuCGTBlsIIORQQ2FmU5Z6TQ1E5NpExd1UY155UU3XXTTdNdhmjEqcz8OS2HsMpBiSigH
        wYJ0D+DCsoDsKssptIYBBonzfv/+K5B5Ud/MM++87/e9v+f//N/n/ZQOVdYeRUQxiGiaojPGHthg+evw
        yrKE5ydjihRZCgEiiEiGoogeioR0uvV9a2MUtBo66fo+TroqTMbrF9L981MHMX1jt9bntJxyHxeD57ik
        9tfKT6ELcec7y+ILvSfW962OaxCONhF/pZ4h+jGPKQy8DQy9hsXfjPCXy9nhdhnQkATcPoDplkR0lcnH
        Xpvo1oX8A2JGKjKLu0gvg83iAh4BBnYBHsHyFQHGtgJ/PAtcTQE6BEGHNHpO/AtEahSW119rqen98eGP
        uk6ajs3cNK4ABwl6AXAR0r8FCGUDPQ8AXh0W23RgBR9Ey+ssXivN863kh+qVlsiKCSuzX2K5P5eZU4GR
        AqAzDhh/ivPnCUsDuixAdwoWWg0In4nvDVRu/pRC8hkm8dqUQzea0unJh5R/GHBTQVTFZcboE8CtfVwz
        QrscC83NBG1GoD2Wa0lYbkvBWHXMpK9EOSpRefQnZ+jS08HI4DOEGICoJ933AZOHqCoJc02KFqzeGFwY
        3Ul/MoAWglo2MRIxW2dGoFzfsGo2fXJ9JXunhphxfD8zmujPo8Dwc1QQg3CVod1tkzfnftcD16myIRlo
        tGC61jzvL9UfY2mP3VHk/lqSA1ViX5ihEhyhqm3AtTwg8Di0i3EI2PWfXC2XI4u3+D78IlBvhVa3BT1l
        +jrXWj+Jz570frjF2rs0R2MjrwLBQqA1npB8wJcHrcGMPrv+15FfJIRZtoCHoNNsgTNpmHQkz3eoSqFH
        lVjpO5VQMzfJl7DzI5bSxLIaCXLtIGgvcC4RC42ZiIwT3M/varcDNVagOhOoysawPXGcsALpLJGXBlsl
        uDzzFr3ZBa2eJp6l0T8zq5d+1XND7YOc7+bmLMCZgYgjC7crrJj9bhuulWys9qqSETVaoU/Zfof5iwFn
        qnO02hCCjw14iSd0jk3YxJM8RXWOdOCH7dAqdmC4dLOf5bzCg3qdkXbPXYuafqVIDEMXpR1LbDzfu9z4
        EBUQ4qTx5TlAWQ4ipbkIqLGfE3T3nt5zaTlxfyMJI80ygUXeseY3aFs2Jkq3LgydTPhTO/8yULwHsD2J
        oGp2/C+IEhXenYJwQ1b3rHMnplUrfKrhqMsmmQOnra1TlXsWb9run+DaO/TlvxVFa73zn7EZ9vcWbyge
        UDfV9Kgmi4cN61GV3J4y82c+VfceIQl3/2OrwL8Blc7Z31qj3ukAAAAASUVORK5CYII=
</value>
  </data>
</root>